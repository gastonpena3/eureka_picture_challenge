<?xml version="1.0" encoding="UTF-8"?>
<Bucket
   uuid = "0A91AF1F-7097-4F63-848C-79041BFB9478"
   type = "1"
   version = "2.0">
   <Breakpoints>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "02422B6C-A639-4F7D-BB95-ED2FD59A909C"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "Eureka_picture_challege/Home/HomeView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "29"
            endingLineNumber = "29"
            landmarkName = "body"
            landmarkType = "24">
            <Locations>
               <Location
                  uuid = "02422B6C-A639-4F7D-BB95-ED2FD59A909C - 8973276d52603eb7"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.ScrollView&lt;SwiftUI._ConditionalContent&lt;SwiftUI.ForEach&lt;Swift.ReversedCollection&lt;Swift.Array&lt;Eureka_picture_challege.Photo&gt;&gt;, Swift.ObjectIdentifier, SwiftUI.HStack&lt;SwiftUI.NavigationLink&lt;Eureka_picture_challege.PictureView, Eureka_picture_challege.PhotoDetail&gt;&gt;&gt;, SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.foregroundColor(Swift.Optional&lt;SwiftUI.Color&gt;) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0)&gt;&gt;&gt;, SwiftUI.Spacer, &lt;&lt;opaque return type of SwiftUI.View.shadow(color: SwiftUI.Color, radius: CoreGraphics.CGFloat, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.edgesIgnoringSafeArea(SwiftUI.Edge.Set) -&gt; some&gt;&gt;.0, SwiftUI.VStack&lt;SwiftUI.TupleView&lt;(SwiftUI.ScrollView&lt;SwiftUI._ConditionalContent&lt;SwiftUI.ForEach&lt;Swift.ReversedCollection&lt;Swift.Array&lt;Eureka_picture_challege.Photo&gt;&gt;, Swift.ObjectIdentifier, SwiftUI.HStack&lt;SwiftUI.NavigationLink&lt;Eureka_picture_challege.PictureView, Eureka_picture_challege.PhotoDetail&gt;&gt;&gt;, SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.foregroundColor(Swift.Optional&lt;SwiftUI.Color&gt;) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0)&gt;&gt;&gt;, SwiftUI.Spacer, &lt;&lt;opaque return type of SwiftUI.View.shadow(color: SwiftUI.Color, radius: CoreGraphics.CGFloat, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0)&gt;&gt;)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.sheet&lt;&#x3c4;_0_0 where &#x3c4;_1_0: SwiftUI.View&gt;(isPresented: SwiftUI.Binding&lt;Swift.Bool&gt;, onDismiss: Swift.Optional&lt;() -&gt; ()&gt;, content: () -&gt; &#x3c4;_1_0) -&gt; some&gt;&gt;.0, SwiftUI.NavigationLink&lt;SwiftUI.EmptyView, Eureka_picture_challege.PhotoDetail&gt;)&gt; in Eureka_picture_challege.HomeView.body.getter : some"
                  moduleName = "Eureka_picture_challege"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/gastonpena/Eureka/eureka_picture_challenge/Eureka_picture_challege/Eureka_picture_challege/Home/HomeView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "29"
                  endingLineNumber = "29"
                  offsetFromSymbolStart = "960">
               </Location>
               <Location
                  uuid = "02422B6C-A639-4F7D-BB95-ED2FD59A909C - 23d4dcefea2ca31a"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI._ConditionalContent&lt;SwiftUI.ForEach&lt;Swift.ReversedCollection&lt;Swift.Array&lt;Eureka_picture_challege.Photo&gt;&gt;, Swift.ObjectIdentifier, SwiftUI.HStack&lt;SwiftUI.NavigationLink&lt;Eureka_picture_challege.PictureView, Eureka_picture_challege.PhotoDetail&gt;&gt;&gt;, SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.foregroundColor(Swift.Optional&lt;SwiftUI.Color&gt;) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0)&gt;&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.ScrollView&lt;SwiftUI._ConditionalContent&lt;SwiftUI.ForEach&lt;Swift.ReversedCollection&lt;Swift.Array&lt;Eureka_picture_challege.Photo&gt;&gt;, Swift.ObjectIdentifier, SwiftUI.HStack&lt;SwiftUI.NavigationLink&lt;Eureka_picture_challege.PictureView, Eureka_picture_challege.PhotoDetail&gt;&gt;&gt;, SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.foregroundColor(Swift.Optional&lt;SwiftUI.Color&gt;) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0)&gt;&gt;&gt;, SwiftUI.Spacer, &lt;&lt;opaque return type of SwiftUI.View.shadow(color: SwiftUI.Color, radius: CoreGraphics.CGFloat, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.edgesIgnoringSafeArea(SwiftUI.Edge.Set) -&gt; some&gt;&gt;.0, SwiftUI.VStack&lt;SwiftUI.TupleView&lt;(SwiftUI.ScrollView&lt;SwiftUI._ConditionalContent&lt;SwiftUI.ForEach&lt;Swift.ReversedCollection&lt;Swift.Array&lt;Eureka_picture_challege.Photo&gt;&gt;, Swift.ObjectIdentifier, SwiftUI.HStack&lt;SwiftUI.NavigationLink&lt;Eureka_picture_challege.PictureView, Eureka_picture_challege.PhotoDetail&gt;&gt;&gt;, SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.foregroundColor(Swift.Optional&lt;SwiftUI.Color&gt;) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0)&gt;&gt;&gt;, SwiftUI.Spacer, &lt;&lt;opaque return type of SwiftUI.View.shadow(color: SwiftUI.Color, radius: CoreGraphics.CGFloat, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0)&gt;&gt;)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.sheet&lt;&#x3c4;_0_0 where &#x3c4;_1_0: SwiftUI.View&gt;(isPresented: SwiftUI.Binding&lt;Swift.Bool&gt;, onDismiss: Swift.Optional&lt;() -&gt; ()&gt;, content: () -&gt; &#x3c4;_1_0) -&gt; some&gt;&gt;.0, SwiftUI.NavigationLink&lt;SwiftUI.EmptyView, Eureka_picture_challege.PhotoDetail&gt;)&gt; in Eureka_picture_challege.HomeView.body.getter : some"
                  moduleName = "Eureka_picture_challege"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/gastonpena/Eureka/eureka_picture_challenge/Eureka_picture_challege/Eureka_picture_challege/Home/HomeView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "30"
                  endingLineNumber = "30"
                  offsetFromSymbolStart = "620">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
   </Breakpoints>
</Bucket>
